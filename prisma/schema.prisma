// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  address     String?
  phone       String
  createdAt   DateTime  @default(now())

  cart        Cart[]
}

model Coupon {
  couponId    Int       @id @default(autoincrement())
  status      CouponStatus
  discountPct Float
  updatedAt   DateTime  @updatedAt

  order       Order?
}

model Order {
  orderId     Int       @id @default(autoincrement())
  cartId      Int       @unique
  couponId    Int?      @unique
  status      OrderStatus
  total       Float
  orderDate   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  coupon      Coupon?    @relation(fields: [couponId], references: [couponId])
  cart        Cart      @relation(fields: [cartId], references: [cartId])
}

model Cart {
  cartId      Int       @id @default(autoincrement())
  userId      Int
  status      CartStatus
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [userId])
  cartItems   CartItem[]
  order       Order?
}

model CartItem {
  cartId      Int
  productId   Int
  quantity    Int

  @@id([cartId, productId])

  cart        Cart      @relation(fields: [cartId], references: [cartId])
  product     Product   @relation(fields: [productId], references: [productId])
}

model Product {
  productId   Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  imageURL    String?

  cartItem    CartItem[]
}

enum CouponStatus {
  Fresh
  Handed
  Used
}

enum OrderStatus {
  OnTheWay
  Arrived
  Canceled
}

enum CartStatus {
  Active
  Ordered
}